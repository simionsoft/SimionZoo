jobs:
- job: Windows
  pool:
    vmImage: 'windows-2019'

  variables:
  - group: code-signing-certificate
  - name: solution
    value: 'SimionZoo.sln'

  steps:
  - task: NuGetToolInstaller@0
    displayName: 'Install NuGet 4.4.1'
    inputs:
      versionSpec: 4.4.1

  - task: NuGetCommand@2
    displayName: 'Restore NuGet packages'
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    displayName: 'Build C# projects'
    inputs:
      solution: '$(solution)' 
      platform: 'any cpu'
      configuration: 'Release'

  - task: VSBuild@1
    displayName: 'Build C++ projects (x86)'
    inputs:
      solution: '$(solution)' 
      platform: 'x86'
      configuration: 'Release'

  - task: VSBuild@1
    displayName: 'Build C++ projects (x64)'
    inputs:
      solution: '$(solution)'
      platform: 'x64'
      configuration: 'Release'

  - task: DownloadSecureFile@1
    displayName: 'Download code signing certificate'
    inputs:
      secureFile: '2021-code-signing-certificate.p12'

  - task: codesigning@2
    displayName: 'Sign executables'
    inputs:
      secureFileId: '2021-code-signing-certificate.p12'
      signCertPassword: '$(certificatePassword)'
      files: '**/*.exe'
      timeServer: 'http://timestamp.digicert.com'
      hashingAlgorithm: 'SHA256'

  - task: VSTest@2
    displayName: 'Run C# tests'
    inputs:
      solution: '$(solution)' 
      platform: 'any cpu'
      configuration: 'Release'
      testAssemblyVer2: '*.dll'
      searchFolder: tests\bin\Release\AnyCPU

  - task: VSTest@2
    displayName: 'Run C++ tests (x86)'
    inputs:
      solution: '$(solution)' 
      platform: 'x86'
      configuration: 'Release'
      testAssemblyVer2: '*.dll'
      searchFolder: tests\bin\Release\Win32

  - task: VSTest@2
    displayName: 'Run C++ tests (x64)'
    inputs:
      solution: '$(solution)'
      platform: 'x64'
      configuration: 'Release'
      testAssemblyVer2: '*.dll'
      searchFolder: tests\bin\Release\x64

  - task: CmdLine@2
    displayName: 'Bundle SimionZoo files (Windows)'
    inputs:
      script: 'bin\\SimionZooBundler.exe -only-windows' 
      workingDirectory: # Optional. If none specified, the solution directory
      failOnStderr: true # Optional

  - task: CopyFiles@2
    displayName: 'Copy Bundle to artifact staging directory'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: '*.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish SimionZoo-win artifact'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: SimionZoo-win

- job: Ubuntu
  pool:
    name: Hosted Ubuntu 1604
  steps:
  - script: |
      echo Installing dependencies...
      sudo apt-get install libgl1-mesa-dev libglew-dev libxi-dev
      echo ...Finished
      echo Downloading files stored with Git LFS...
      rm bin/cntk-linux/*
      git checkout .
      echo ...Finished
    displayName: 'Install dependencies'
  - task: Bash@3
    displayName: 'Run linux build script'
    inputs:
      targetType: filePath
      filePath: './linux-ci-build.sh'
      failOnStderr: true

  - task: MSBuild@1
    displayName: 'Build SimionZoo bundler'
    inputs:
      solution: SimionZoo.sln
      platform: 'Any CPU'
      configuration: 'Linux-Release'
      restoreNugetPackages: true

  - script: |
      cp tmp/RLSimion-linux/RLSimion-linux.exe bin/RLSimion-linux-x64.exe
      cp tmp/CNTKWrapper-linux/CNTKWrapper-linux.so bin/libCNTKWrapper-linux.so
      chmod 777 bin/SimionZooBundler.exe
      bin/SimionZooBundler.exe -only-linux
    displayName: 'Bundle SimionZoo files (Linux)'


  - task: CopyFiles@2
    displayName: 'Copy Bundle to artifact staging directory'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: '*.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish SimionZoo-linux artifact'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: SimionZoo-linux